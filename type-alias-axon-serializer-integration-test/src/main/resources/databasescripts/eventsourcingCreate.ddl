-- This script uses H2 Database specific language extensions "IF NOT EXISTS" and "MERGE INTO .. KEY" to make it idempotent

CREATE TABLE IF NOT EXISTS DOMAINEVENTENTRY (
	GLOBALINDEX BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 0 INCREMENT BY 1) NOT NULL, 
	AGGREGATEIDENTIFIER VARCHAR(255) NOT NULL,
	EVENTIDENTIFIER VARCHAR(255) NOT NULL, 
	METADATA BLOB, 
	PAYLOAD BLOB NOT NULL,
	PAYLOADREVISION VARCHAR(255), 
	PAYLOADTYPE VARCHAR(255) NOT NULL, 
	SEQUENCENUMBER BIGINT NOT NULL, 
	TIMESTAMP VARCHAR(255) NOT NULL,  
	TYPE VARCHAR(255) NOT NULL, 
	PRIMARY KEY (GLOBALINDEX)
	--UNIQUE (AGGREGATEIDENTIFIER, SEQUENCENUMBER),
	--UNIQUE (EVENTIDENTIFIER)
);
CREATE UNIQUE INDEX IF NOT EXISTS DOMAINEVENTENTRY_UNIQUE_INDEX ON DOMAINEVENTENTRY (AGGREGATEIDENTIFIER, SEQUENCENUMBER);
CREATE UNIQUE INDEX IF NOT EXISTS DOMAINEVENTENTRY_UNIQUE_INDEX ON DOMAINEVENTENTRY (EVENTIDENTIFIER);

CREATE TABLE IF NOT EXISTS SNAPSHOTEVENTENTRY (
	SEQUENCENUMBER BIGINT NOT NULL, 
	AGGREGATEIDENTIFIER VARCHAR(255) NOT NULL, 
	TYPE VARCHAR(255) NOT NULL,  
	EVENTIDENTIFIER VARCHAR(255) NOT NULL, 
	METADATA BLOB, 
	PAYLOAD BLOB NOT NULL,  
	PAYLOADREVISION VARCHAR(255), 
	PAYLOADTYPE VARCHAR(255) NOT NULL,
	TIMESTAMP VARCHAR(255) NOT NULL,  
	PRIMARY KEY (AGGREGATEIDENTIFIER, SEQUENCENUMBER),
	UNIQUE (EVENTIDENTIFIER)
);
CREATE TABLE IF NOT EXISTS EVENTSOURCING_SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT NUMERIC(38), PRIMARY KEY (SEQ_NAME));

CREATE TABLE IF NOT EXISTS TokenEntry (
	processorName VARCHAR(255) NOT NULL,
	segment INTEGER NOT NULL,
	token BLOB NULL,
	tokenType VARCHAR(255) NULL,
	timestamp VARCHAR(255) NULL,
	owner VARCHAR(255) NULL,
	PRIMARY KEY (processorName,segment)
);

CREATE TABLE IF NOT EXISTS SagaEntry (
	sagaId VARCHAR(255) NOT NULL,
	revision VARCHAR(255),
	sagaType VARCHAR(255),
	serializedSaga BLOB,
	PRIMARY KEY (sagaId)
);
    
CREATE TABLE IF NOT EXISTS AssociationValueEntry (
	id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
	associationKey VARCHAR(255),
	associationValue VARCHAR(255),
	sagaId VARCHAR(255),
	sagaType VARCHAR(255),
	PRIMARY KEY (id)
);

CREATE INDEX IF NOT EXISTS ASSOCIATIONVALUEENTRY_INDEX_ASSOCIATION ON ASSOCIATIONVALUEENTRY (sagaType, associationKey, associationValue);
CREATE INDEX IF NOT EXISTS ASSOCIATIONVALUEENTRY_INDEX_SAGA ON ASSOCIATIONVALUEENTRY (sagaId, sagaType);

MERGE INTO EVENTSOURCING_SEQUENCE KEY (SEQ_NAME) values ('ASSOCIATIONVALUEENTRY_ID', 0);
MERGE INTO EVENTSOURCING_SEQUENCE KEY (SEQ_NAME) values ('DOMAINEVENTENTRY_GLOBAL_INDEX', 0);
--INSERT INTO EVENTSOURCING_SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('ASSOCIATIONVALUEENTRY_ID', 0);
--INSERT INTO EVENTSOURCING_SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('DOMAINEVENTENTRY_GLOBAL_INDEX', 0);
